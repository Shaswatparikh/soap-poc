
/*
 * 
 */

package com.homeservices.business.webservices;

import java.net.MalformedURLException;
import java.net.URL;
import javax.xml.namespace.QName;
import javax.xml.ws.Service;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceFeature;

/**
 * This class was generated by Apache CXF 2.1.2
 * Thu Jul 21 16:55:57 IST 2016
 * Generated source version: 2.1.2
 * 
 */


@WebServiceClient(name = "InstallEndpointService", 
                  wsdlLocation = "file:/home/user/testproject/weather-client/src/main/wsdl/install.wsdl",
                  targetNamespace = "http://webservices.business.homeservices.com/") 
public class InstallEndpointService extends Service {

    public final static URL WSDL_LOCATION;
    public final static QName SERVICE = new QName("http://webservices.business.homeservices.com/", "InstallEndpointService");
    public final static QName InstallEndpointPort = new QName("http://webservices.business.homeservices.com/", "InstallEndpointPort");
    static {
        URL url = null;
        try {
            url = new URL("file:/home/user/testproject/weather-client/src/main/wsdl/install.wsdl");
        } catch (MalformedURLException e) {
            System.err.println("Can not initialize the default wsdl from file:/home/user/testproject/weather-client/src/main/wsdl/install.wsdl");
            // e.printStackTrace();
        }
        WSDL_LOCATION = url;
    }

    public InstallEndpointService(URL wsdlLocation) {
        super(wsdlLocation, SERVICE);
    }

    public InstallEndpointService(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public InstallEndpointService() {
        super(WSDL_LOCATION, SERVICE);
    }

    /**
     * 
     * @return
     *     returns InstallEndpoint
     */
    @WebEndpoint(name = "InstallEndpointPort")
    public InstallEndpoint getInstallEndpointPort() {
        return super.getPort(InstallEndpointPort, InstallEndpoint.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns InstallEndpoint
     */
    @WebEndpoint(name = "InstallEndpointPort")
    public InstallEndpoint getInstallEndpointPort(WebServiceFeature... features) {
        return super.getPort(InstallEndpointPort, InstallEndpoint.class, features);
    }

}
